// Vulnerability 1: Cross-Site Scripting (XSS)
function reflectXSS(userInput) {
    document.write(userInput);
}

// Vulnerability 2: Insecure Direct Object References (IDOR)
let users = [
    { id: 1, name: 'John', password: 'password123' },
    { id: 2, name: 'Jane', password: 'password456' }
];

function getUser(id) {
    return users.find(user => user.id === id);
}

// Vulnerability 3: No rate limiting
function login(username, password) {
    // Simulate a login attempt with no rate limiting
    console.log(`Logging in with username: ${username} and password: ${password}`);
}

// Vulnerability 4: eval() usage
function evalUsage(userInput) {
    eval(userInput);
}

// Simulate user input
let userInput = "<img src='x' onerror='alert(1)'>";
reflectXSS(userInput);

let id = 1;
console.log(getUser(id));

let username = 'John';
let password = 'password123';
login(username, password);

let code = "console.log('This is a test')";
evalUsage(code);


password = "newPassword";

app.post('/login', function (req, res) {
    var username = req.body.username;
    var password = req.body.password;
 
    // Vulnerability
    console.log(`U:${username}  P:${password}`);
    if (username == 'admin' && password == 'password') {
        res.cookie('session', '123456', { httpOnly: false });
        res.redirect('/dashboard');
    } else {
        res.send('Invalid username or password');
    }
});